{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Downloads/marvel_starter-2/src/components/charList/CharList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/useMarvelService';\nimport Spinner from '../Spinner/Spinner';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = () => {\n  _s();\n\n  const [charList, setCharList] = useState([]);\n  const [offset, setOffset] = useState(210);\n  const [disabled, setDisabled] = useState(true);\n  const {\n    loading,\n    getAllCharacters\n  } = useMarvelService();\n  useEffect(() => {\n    getAllCharacters().then(res => setCharList(res));\n    setOffset(offset => offset + 9);\n    onCharList();\n  }, []);\n\n  const onCharList = () => {\n    getAllCharacters(offset).then(res => setCharList([...charList, ...res]));\n    setOffset(offset => offset + 9);\n  };\n\n  const isLoading = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 33\n  }, this) : null;\n  const characters = charList.map((char, index) => /*#__PURE__*/_jsxDEV(Character, {\n    char: char\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 54\n  }, this));\n  const isDisabled = disabled ? disabled : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: [characters, isLoading]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabisDisabledled: true,\n      className: \"button button__main button__long\",\n      onClick: () => onCharList(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharList, \"rbupN6+p1qs2e4t4LnNHRyhCCwA=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharList;\n\nconst Character = ({\n  char\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"char__item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: char.avatar,\n      alt: \"abyss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__name\",\n      children: char.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Character;\nexport default CharList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharList\");\n$RefreshReg$(_c2, \"Character\");","map":{"version":3,"sources":["/Users/artem/Downloads/marvel_starter-2/src/components/charList/CharList.jsx"],"names":["useState","useEffect","useMarvelService","Spinner","CharList","charList","setCharList","offset","setOffset","disabled","setDisabled","loading","getAllCharacters","then","res","onCharList","isLoading","characters","map","char","index","isDisabled","Character","avatar","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM;AAAEW,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAgCV,gBAAgB,EAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,gBAAgB,GAAGC,IAAnB,CAAwBC,GAAG,IAAIR,WAAW,CAACQ,GAAD,CAA1C;AACAN,IAAAA,SAAS,CAACD,MAAM,IAAIA,MAAM,GAAG,CAApB,CAAT;AACAQ,IAAAA,UAAU;AACb,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMA,UAAU,GAAG,MAAM;AACrBH,IAAAA,gBAAgB,CAACL,MAAD,CAAhB,CAAyBM,IAAzB,CAA8BC,GAAG,IAAIR,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,GAAGS,GAAjB,CAAD,CAAhD;AACAN,IAAAA,SAAS,CAACD,MAAM,IAAIA,MAAM,GAAG,CAApB,CAAT;AACH,GAHD;;AAKA,QAAMS,SAAS,GAAGL,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAiB,IAA1C;AACA,QAAMM,UAAU,GAAGZ,QAAQ,CAACa,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,SAAD;AAEL,IAAA,IAAI,EAAED;AAFD,KACAC,KADA;AAAA;AAAA;AAAA;AAAA,UAA9B,CAAnB;AAGA,QAAMC,UAAU,GAAGZ,QAAQ,GAAGA,QAAH,GAAc,IAAzC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,iBACKQ,UADL,EAEKD,SAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAQ,MAAA,kBAAkB,MAA1B;AAA2B,MAAA,SAAS,EAAC,kCAArC;AACI,MAAA,OAAO,EAAE,MAAMD,UAAU,EAD7B;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApCD;;GAAMX,Q;UAKoCF,gB;;;KALpCE,Q;;AAsCN,MAAMkB,SAAS,GAAG,CAAC;AAACH,EAAAA;AAAD,CAAD,KAAY;AAC1B,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACI,MAAf;AAAuB,MAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BJ,IAAI,CAACK;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;MAAMF,S;AASN,eAAelB,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/useMarvelService'\nimport Spinner from '../Spinner/Spinner';\n\nimport './charList.scss';\n\nconst CharList = () => {\n    const [charList, setCharList] = useState([])\n    const [offset, setOffset] = useState(210)\n    const [disabled, setDisabled] = useState(true)\n\n    const { loading, getAllCharacters } = useMarvelService()\n\n    useEffect(() => {\n        getAllCharacters().then(res => setCharList(res))\n        setOffset(offset => offset + 9)\n        onCharList()\n    }, [])\n\n    const onCharList = () => {\n        getAllCharacters(offset).then(res => setCharList([...charList, ...res]))\n        setOffset(offset => offset + 9)\n    }\n\n    const isLoading = loading ? <Spinner /> : null\n    const characters = charList.map((char, index) => <Character \n                                                key={index}\n                                                char={char}/>)\n    const isDisabled = disabled ? disabled : null\n\n    return (\n        <div className=\"char__list\">\n            <ul className=\"char__grid\">\n                {characters}\n                {isLoading}\n            </ul>\n            <button disabisDisabledled className=\"button button__main button__long\"\n                onClick={() => onCharList()}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nconst Character = ({char}) => {\n    return (\n        <li className=\"char__item\">\n            <img src={char.avatar} alt=\"abyss\" />\n            <div className=\"char__name\">{char.name}</div>\n        </li>\n    )\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}