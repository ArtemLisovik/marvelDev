{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n\nconst useRequest = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false); // const request = async (url) => {\n  //     setLoading(true)\n  //     const response = await fetch(url, {method: 'GET', headers: {'Content-type': 'application/json'}})\n  //     if (!response.ok) {\n  //         setError(true)\n  //         throw new Error (`Something go wrong, status - ${response.status}`)\n  //     }\n  //     setLoading(false)\n  //     return response.json()\n  // }\n\n  const request = useCallback(async (url, {}) => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        setError(true);\n        throw new Error(`Something go wrong, status - ${response.status}`);\n      }\n\n      setLoading(false);\n      return response.json();\n    } catch (e) {}\n  }, []);\n  return {\n    request,\n    loading,\n    error\n  };\n};\n\n_s(useRequest, \"NCsxjGa0wkehAcsW4fUtPMCJJW8=\");\n\nexport default useRequest;","map":{"version":3,"sources":["/Users/artem/Downloads/marvel_starter-2/src/services/useRequest.js"],"names":["useState","useCallback","useRequest","loading","setLoading","error","setError","request","url","response","fetch","method","headers","ok","Error","status","json","e"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC,CAFqB,CAIrB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAAE,OAAOO,GAAP,EAAY,EAAZ,KAAmB;AAC5CJ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACF,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAACG,QAAAA,MAAM,EAAE,KAAT;AAAgBC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAAzB,OAAN,CAA5B;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACdP,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,cAAM,IAAIQ,KAAJ,CAAY,gCAA+BL,QAAQ,CAACM,MAAO,EAA3D,CAAN;AACH;;AAEDX,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOK,QAAQ,CAACO,IAAT,EAAP;AACD,KAXD,CAYA,OAAMC,CAAN,EAAS,CAER;AACF,GAjB0B,EAiBxB,EAjBwB,CAA3B;AAmBA,SAAO;AAACV,IAAAA,OAAD;AAAUJ,IAAAA,OAAV;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CAtCD;;GAAMH,U;;AAwCN,eAAeA,UAAf","sourcesContent":["import { useState, useCallback } from \"react\"\n\nconst useRequest = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    // const request = async (url) => {\n    //     setLoading(true)\n    //     const response = await fetch(url, {method: 'GET', headers: {'Content-type': 'application/json'}})\n\n    //     if (!response.ok) {\n    //         setError(true)\n    //         throw new Error (`Something go wrong, status - ${response.status}`)\n    //     }\n\n    //     setLoading(false)\n\n    //     return response.json()\n    // }\n\n    const request = useCallback( async (url, {}) => {\n        setLoading(true)\n      try {\n        const response = await fetch(url, {method: 'GET', headers: {'Content-type': 'application/json'}})\n\n        if (!response.ok) {\n            setError(true)\n            throw new Error (`Something go wrong, status - ${response.status}`)\n        }\n\n        setLoading(false)\n\n        return response.json()\n      }\n      catch(e) {\n\n      }\n    }, [])\n\n    return {request, loading, error}\n}\n\nexport default useRequest\n"]},"metadata":{},"sourceType":"module"}