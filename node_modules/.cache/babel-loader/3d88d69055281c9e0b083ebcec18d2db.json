{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useRequest from \"./useRequest\";\n\nconst useMarvelService = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useRequest();\n\n  const getCharacter = async (id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)) => {\n    const result = await request(`https://gateway.marvel.com:443/v1/public/characters/${id}?apikey=b9cd5ff800088663996fca66ed987b75`);\n    return _modifiedCharacter(result.data.results[0]);\n  };\n\n  const getAllCharacters = async (offset = 210) => {\n    const result = await request(`https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=${offset}&apikey=b9cd5ff800088663996fca66ed987b75`);\n    const modifiedList = result.data.results.map(char => _modifiedCharacter(char));\n    return modifiedList;\n  };\n\n  const _modifiedCharacter = char => {\n    return {\n      name: char.name,\n      id: char.id,\n      descr: char.description ? char.description : 'There is no information about this character yet.',\n      avatar: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n      comics\n    };\n  };\n\n  return {\n    error,\n    loading,\n    getCharacter,\n    clearError,\n    getAllCharacters\n  };\n};\n\n_s(useMarvelService, \"xjYDVEwImvF5GnmwpY5g2qp7BSg=\", false, function () {\n  return [useRequest];\n});\n\nexport default useMarvelService;","map":{"version":3,"sources":["/Users/artem/Desktop/Web_development/React/marvel_starter-2/src/services/useMarvelService.jsx"],"names":["useRequest","useMarvelService","loading","error","request","clearError","getCharacter","id","Math","floor","random","result","_modifiedCharacter","data","results","getAllCharacters","offset","modifiedList","map","char","name","descr","description","avatar","thumbnail","path","extension","comics"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAwCL,UAAU,EAAxD;;AAEA,QAAMM,YAAY,GAAG,OAAOC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,UAAU,OAA3B,IAAsC,OAAjD,CAAZ,KAA0E;AAC3F,UAAMC,MAAM,GAAG,MAAMP,OAAO,CAAE,uDAAsDG,EAAG,0CAA3D,CAA5B;AACA,WAAOK,kBAAkB,CAACD,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoB,CAApB,CAAD,CAAzB;AACH,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,OAAOC,MAAM,GAAG,GAAhB,KAAwB;AAC7C,UAAML,MAAM,GAAG,MAAMP,OAAO,CAAE,sEAAqEY,MAAO,0CAA9E,CAA5B;AACA,UAAMC,YAAY,GAAGN,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoBI,GAApB,CAAwBC,IAAI,IAAIP,kBAAkB,CAACO,IAAD,CAAlD,CAArB;AACA,WAAOF,YAAP;AACH,GAJD;;AAMA,QAAML,kBAAkB,GAAIO,IAAD,IAAU;AACjC,WAAO;AACHC,MAAAA,IAAI,EAAED,IAAI,CAACC,IADR;AAEHb,MAAAA,EAAE,EAAEY,IAAI,CAACZ,EAFN;AAGHc,MAAAA,KAAK,EAAEF,IAAI,CAACG,WAAL,GAAmBH,IAAI,CAACG,WAAxB,GAAsC,mDAH1C;AAIHC,MAAAA,MAAM,EAAE,GAAEJ,IAAI,CAACK,SAAL,CAAeC,IAAK,IAAGN,IAAI,CAACK,SAAL,CAAeE,SAAU,EAJvD;AAKHC,MAAAA;AALG,KAAP;AAOH,GARD;;AAUA,SAAO;AAACxB,IAAAA,KAAD;AAAQD,IAAAA,OAAR;AAAiBI,IAAAA,YAAjB;AAA+BD,IAAAA,UAA/B;AAA2CU,IAAAA;AAA3C,GAAP;AACH,CA1BD;;GAAMd,gB;UAE4CD,U;;;AA0BlD,eAAeC,gBAAf","sourcesContent":["import useRequest from \"./useRequest\"\n\nconst useMarvelService = () => {\n\n    const {loading, error, request, clearError} = useRequest()\n\n    const getCharacter = async (id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)) => {\n        const result = await request(`https://gateway.marvel.com:443/v1/public/characters/${id}?apikey=b9cd5ff800088663996fca66ed987b75`)\n        return _modifiedCharacter(result.data.results[0])\n    }\n\n    const getAllCharacters = async (offset = 210) => {\n        const result = await request(`https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=${offset}&apikey=b9cd5ff800088663996fca66ed987b75`)\n        const modifiedList = result.data.results.map(char => _modifiedCharacter(char))\n        return modifiedList\n    }\n\n    const _modifiedCharacter = (char) => {\n        return {\n            name: char.name,\n            id: char.id,\n            descr: char.description ? char.description : 'There is no information about this character yet.',\n            avatar:`${char.thumbnail.path}.${char.thumbnail.extension}`,\n            comics\n        }\n    }\n\n    return {error, loading, getCharacter, clearError, getAllCharacters}\n}\n\nexport default useMarvelService"]},"metadata":{},"sourceType":"module"}