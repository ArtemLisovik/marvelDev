{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Desktop/Web_development/React/marvel_starter-2/src/components/charInfo/CharInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\nimport useMarvelService from '../../services/useMarvelService';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharInfo = props => {\n  _s();\n\n  const [characterId, setCharacterId] = useState(null);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  useEffect(() => {\n    onCharacterId();\n  }, [props.characterId]);\n  useEffect(() => {\n    getCharacter(characterId).then(res => setSelectedCharacter(res));\n  }, [characterId]);\n  const {\n    getCharacter,\n    loading\n  } = useMarvelService();\n\n  const onCharacterId = () => {\n    setCharacterId(props.characterId);\n  };\n\n  console.log(characterId);\n  const skeleton = selectedCharacter ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 49\n  }, this);\n  const content = selectedCharacter ? /*#__PURE__*/_jsxDEV(View, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 41\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharInfo, \"lx2gFJCXitbqjQTtZLT0ZoINAaQ=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharInfo;\n\nconst View = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c2 = View;\nexport default CharInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["/Users/artem/Desktop/Web_development/React/marvel_starter-2/src/components/charInfo/CharInfo.js"],"names":["useState","useCallback","useEffect","useMarvelService","Skeleton","thor","CharInfo","props","characterId","setCharacterId","selectedCharacter","setSelectedCharacter","onCharacterId","getCharacter","then","res","loading","console","log","skeleton","content","View"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,SAA/B,QAA+C,OAA/C;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,IAAD,CAA1D;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,aAAa;AAChB,GAFQ,EAEN,CAACL,KAAK,CAACC,WAAP,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACL,WAAD,CAAZ,CAA0BM,IAA1B,CAA+BC,GAAG,IAAIJ,oBAAoB,CAACI,GAAD,CAA1D;AACH,GAFQ,EAEN,CAACP,WAAD,CAFM,CAAT;AAIA,QAAM;AAACK,IAAAA,YAAD;AAAeG,IAAAA;AAAf,MAA0Bb,gBAAgB,EAAhD;;AAED,QAAMS,aAAa,GAAG,MAAM;AAC1BH,IAAAA,cAAc,CAACF,KAAK,CAACC,WAAP,CAAd;AACD,GAFD;;AAICS,EAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AAEA,QAAMW,QAAQ,GAAGT,iBAAiB,GAAG,IAAH,gBAAU,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAA5C;AACA,QAAMU,OAAO,GAAGV,iBAAiB,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAc,IAA/C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BD;;GAAMJ,Q;UAY8BH,gB;;;KAZ9BG,Q;;AA8BN,MAAMe,IAAI,GAAG,MAAM;AACf,sBACI,qCADJ;AAIH,CALD;;MAAMA,I;AAON,eAAef,QAAf","sourcesContent":["import {useState, useCallback, useEffect} from 'react'\nimport useMarvelService from '../../services/useMarvelService';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\n\nconst CharInfo = (props) => {\n    const [characterId, setCharacterId] = useState(null)\n    const [selectedCharacter, setSelectedCharacter] = useState(null)\n\n    useEffect(() => {\n        onCharacterId()\n    }, [props.characterId])\n\n    useEffect(() => {\n        getCharacter(characterId).then(res => setSelectedCharacter(res))\n    }, [characterId])\n\n    const {getCharacter, loading} = useMarvelService()\n\n   const onCharacterId = () => {\n     setCharacterId(props.characterId)\n   }\n\n    console.log(characterId)\n\n    const skeleton = selectedCharacter ? null : <Skeleton />\n    const content = selectedCharacter ? <View /> : null\n\n    return (\n        <div className=\"char__info\">\n            \n        </div>\n    )\n}\n\nconst View = () => {\n    return (\n        <>\n        </>\n    )\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}