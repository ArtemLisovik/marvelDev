{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Desktop/Web_development/React/marvel_starter-2/src/components/charList/CharList.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport useMarvelService from '../../services/useMarvelService';\nimport Spinner from '../Spinner/Spinner';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharList = props => {\n  _s();\n  const [charList, setCharList] = useState([]);\n  const [offset, setOffset] = useState(210);\n  const [selectedChar, setSelectedChar] = useState(null);\n  const {\n    loading,\n    getAllCharacters\n  } = useMarvelService();\n  useEffect(() => {\n    getAllCharacters().then(res => setCharList(res));\n    setOffset(offset => offset + 9);\n    onCharList();\n  }, []);\n  const onCharList = () => {\n    getAllCharacters(offset).then(res => setCharList([...charList, ...res]));\n    setOffset(offset => offset + 9);\n  };\n  const onSelectedChar = (id, e) => {\n    props.setCharacterId(id);\n    charactersRef.current.forEach(elem => {\n      if (elem === e) {\n        elem.classList.add('selected');\n      } else {\n        elem.classList.remove('selected');\n      }\n    });\n  };\n  const charactersRef = useRef([]);\n  const isLoading = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 33\n  }, this) : null;\n  const characters = charList.map((char, index) => /*#__PURE__*/_jsxDEV(Character, {\n    charactersRef: charactersRef,\n    char: char,\n    onSelectedChar: onSelectedChar\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 54\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: [characters, isLoading]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading,\n      className: \"button button__main button__long\",\n      onClick: () => onCharList(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(CharList, \"hUjD9Y0cgipulYn8b6Y4ElMStHA=\", false, function () {\n  return [useMarvelService];\n});\n_c = CharList;\nconst Character = _ref => {\n  _s2();\n  let {\n    char,\n    onSelectedChar,\n    charactersRef\n  } = _ref;\n  useEffect(() => {\n    charactersRef.current.push(charItemRef.current);\n  }, []);\n  const charItemRef = useRef();\n  const avatarStyle = char.avatar.indexOf('image_not_available') > -1 ? {\n    objectFit: 'contain'\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"char__item\",\n    ref: charItemRef,\n    onClick: e => onSelectedChar(char.id, e.currentTarget),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: avatarStyle,\n      src: char.avatar,\n      alt: \"abyss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__name\",\n      children: char.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s2(Character, \"frkHiPuSwDXFLWru1M0DJhAlocY=\");\n_c2 = Character;\nexport default CharList;\nvar _c, _c2;\n$RefreshReg$(_c, \"CharList\");\n$RefreshReg$(_c2, \"Character\");","map":{"version":3,"names":["useState","useEffect","useRef","useMarvelService","Spinner","CharList","props","charList","setCharList","offset","setOffset","selectedChar","setSelectedChar","loading","getAllCharacters","then","res","onCharList","onSelectedChar","id","e","setCharacterId","charactersRef","current","forEach","elem","classList","add","remove","isLoading","characters","map","char","index","Character","push","charItemRef","avatarStyle","avatar","indexOf","objectFit","currentTarget","name"],"sources":["/Users/artem/Desktop/Web_development/React/marvel_starter-2/src/components/charList/CharList.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nimport useMarvelService from '../../services/useMarvelService'\nimport Spinner from '../Spinner/Spinner';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [charList, setCharList] = useState([])\n    const [offset, setOffset] = useState(210)\n    const [selectedChar, setSelectedChar] = useState(null)\n\n    const { loading, getAllCharacters } = useMarvelService()\n\n    useEffect(() => {\n        getAllCharacters().then(res => setCharList(res))\n        setOffset(offset => offset + 9)\n        onCharList()\n    }, [])\n\n    const onCharList = () => {\n        getAllCharacters(offset).then(res => setCharList([...charList, ...res]))\n        setOffset(offset => offset + 9)\n    }\n\n    const onSelectedChar = (id, e) => {\n        props.setCharacterId(id)\n        charactersRef.current.forEach(elem => {\n            if (elem === e ) {\n                elem.classList.add('selected')\n            }\n            else {\n                elem.classList.remove('selected')\n            }\n        });\n    }\n\n    const charactersRef = useRef([])\n\n    const isLoading = loading ? <Spinner /> : null\n    const characters = charList.map((char, index) => <Character \n        charactersRef={charactersRef}\n        key={index}\n        char={char}\n        onSelectedChar={onSelectedChar}\n        />)\n\n    return (\n        <div className=\"char__list\">\n            <ul className=\"char__grid\">\n                {characters}\n                {isLoading}\n            </ul>\n            <button disabled={loading} className=\"button button__main button__long\"\n                onClick={() => onCharList()}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nconst Character = ({char, onSelectedChar, charactersRef}) => {\n    useEffect(() => {\n        charactersRef.current.push(charItemRef.current)\n    }, [])\n\n    const charItemRef = useRef()\n\n    const avatarStyle = char.avatar.indexOf('image_not_available') > -1 ? {objectFit: 'contain'} : null\n    \n    return (\n        <li className=\"char__item\"\n            ref={charItemRef}\n            onClick={(e) => onSelectedChar(char.id, e.currentTarget)}>\n            <img style={avatarStyle} src={char.avatar} alt=\"abyss\" />\n            <div className=\"char__name\">{char.name}</div>\n        </li>\n    )\n}\n\nexport default CharList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}