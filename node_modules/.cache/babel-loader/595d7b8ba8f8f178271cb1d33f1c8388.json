{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useRequest = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false); // const request = async (url) => {\n  //     setLoading(true)\n  //     const response = await fetch(url, {method: 'GET', headers: {'Content-type': 'application/json'}})\n  //     if (!response.ok) {\n  //         setError(true)\n  //         throw new Error (`Something go wrong, status - ${response.status}`)\n  //     }\n  //     setLoading(false)\n  //     return response.json()\n  // }\n\n  const request = async url => {\n    setLoading(true);\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n\n    if (!response.ok) {\n      setError(true);\n      throw new Error(`Something go wrong, status - ${response.status}`);\n    }\n\n    setLoading(false);\n    return response.json();\n  }; // setError(false)\n\n\n  return {\n    request,\n    loading,\n    error\n  };\n};\n\n_s(useRequest, \"ezuIHthRuwPtcIGZ0rak+eIR8KI=\");\n\nexport default useRequest; // return {request, responce, loading, error}","map":{"version":3,"sources":["/Users/artem/Downloads/marvel_starter-2/src/services/useRequest.js"],"names":["useState","useRequest","loading","setLoading","error","setError","request","url","response","fetch","method","headers","ok","Error","status","json"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC,CAFqB,CAIrB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA,QAAMM,OAAO,GAAG,MAAOC,GAAP,IAAe;AAC3BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAACG,MAAAA,MAAM,EAAE,KAAT;AAAgBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAAzB,KAAN,CAA5B;;AAEA,QAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACdP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,YAAM,IAAIQ,KAAJ,CAAY,gCAA+BL,QAAQ,CAACM,MAAO,EAA3D,CAAN;AACH;;AAEDX,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,WAAOK,QAAQ,CAACO,IAAT,EAAP;AACH,GAZD,CAlBqB,CAgCrB;;;AAEA,SAAO;AAACT,IAAAA,OAAD;AAAUJ,IAAAA,OAAV;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CAnCD;;GAAMH,U;;AAuCN,eAAeA,UAAf,C,CACA","sourcesContent":["import { useState } from \"react\"\n\nconst useRequest = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    // const request = async (url) => {\n    //     setLoading(true)\n    //     const response = await fetch(url, {method: 'GET', headers: {'Content-type': 'application/json'}})\n\n    //     if (!response.ok) {\n    //         setError(true)\n    //         throw new Error (`Something go wrong, status - ${response.status}`)\n    //     }\n\n    //     setLoading(false)\n\n    //     return response.json()\n    // }\n\n    const request = async (url) => {\n        setLoading(true)\n        const response = await fetch(url, {method: 'GET', headers: {'Content-type': 'application/json'}})\n\n        if (!response.ok) {\n            setError(true)\n            throw new Error (`Something go wrong, status - ${response.status}`)\n        }\n\n        setLoading(false)\n\n        return response.json()\n    }\n\n    // setError(false)\n\n    return {request, loading, error}\n}\n\n\n\nexport default useRequest\n// return {request, responce, loading, error}"]},"metadata":{},"sourceType":"module"}